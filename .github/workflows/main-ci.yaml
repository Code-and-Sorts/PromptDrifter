name: PromptDrifter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-lint-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: ['3.13']

    steps:
    - name: ‚§µÔ∏è Checkout code
      uses: actions/checkout@v4

    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: üöÄ Install uv with caching
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: üîó Check lock file consistency (uv.lock)
      run: uv lock --check

    - name: ‚ôªÔ∏è Cache .venv
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}-
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-

    - name: Display CLI source
      run: |
        echo "--- Contents of src/promptdrifter/cli.py (around sanitization points) ---"
        grep -C 7 "sane_target_path_str =" src/promptdrifter/cli.py || echo "sane_target_path_str not found"
        grep -C 5 "sane_file_path_str =" src/promptdrifter/cli.py || echo "sane_file_path_str not found for invalid_files"
        grep -C 3 "sane_output_file_str =" src/promptdrifter/cli.py || echo "sane_output_file_str not found for record command"
        echo "--- End of CLI source display ---"

    - name: üß± Build project with uv
      run: uv build

    - name: üß™ Run tests with uv
      run: uv run pytest --cov=src/promptdrifter

    - name: ‚ú® Lint with Ruff using uv
      run: uv run ruff check .

name: PromptDrifter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-lint-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13']

    steps:
    - name: ⤵️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: 🚀 Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH # For Linux/macOS
        if [ "${{ runner.os }}" == "Windows" ]; then
          echo "$USERPROFILE\.cargo\bin" >> $GITHUB_PATH # For Windows
        fi
      shell: bash

    - name: ✅ Verify uv installation
      run: uv --version

    # https://github.com/actions/cache/blob/main/examples.md#python---uv
    - name: 📂 Get uv cache directory
      id: get-uv-cache-dir
      run: echo "UV_CACHE_DIR=$(uv cache dir)" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: 🗂️ Cache uv global dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.get-uv-cache-dir.outputs.UV_CACHE_DIR }}
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}-
          ${{ runner.os }}-uv-

    - name: 🔗 Check lock file consistency (uv.lock)
      run: uv lock --check

    # - name: 📦 Install dependencies using uv
    #   run: uv pip sync pyproject.toml --all-extras

    - name: ♻️ Cache .venv
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}-
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-

    - name: 🧱 Build project with uv
      run: uv build

    - name: 🧪 Run tests with uv
      run: uv run pytest

    - name: ✨ Lint with Ruff using uv
      run: uv run ruff check .
